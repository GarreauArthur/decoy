name: Docker Image CI

on:
  push:
    tags:
      - "v*.*.*"
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Add release version number to env variable
      run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
    - name: Checkout git repo
      uses: actions/checkout@v2
    - name: Use Node.js (do I need this ?)
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'yarn'
    - name: Install dependencies
      run: yarn

    # Step 1, add the IP address
    - name: Add IP address to trusted source (managed database)
      uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
      with:
        action: "add"
        database_id: ${{ secrets.DATABASE_ID }}
        digitalocean_token: ${{ secrets.DIGITALOCEAN_TOKEN }}

    # Step 2, do whatever you need to do with you database
    - name: Deploy to database 
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    # Step 3, remove the IP address
    - name: Remove IP address to trusted source (managed database)
      uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
      with:
        action: "remove"
        database_id: ${{ secrets.DATABASE_ID }}
        digitalocean_token: ${{ secrets.DIGITALOCEAN_TOKEN }}

    - name: Run test
      run: yarn test
    - name: Build typescript project
      run: yarn build:ts
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v2.6.1
      with:
        push: true
        context: .
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/decoy:${{ env.RELEASE_VERSION }}, ${{ secrets.DOCKER_HUB_USERNAME }}/decoy:latest
    - name: ssh, I am in
      uses: appleboy/ssh-action@master
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: DATABASE_URL
        script: |
          export DATABASE_URL=$DATABASE_URL
          echo "$ENV_VAR"
          echo "I was there PogU $(date)" >> iwasthere
          docker pull cqncpdp/decoy:latest
          docker stop decoy
          docker rm decoy
          docker run -p 3000:3000 --env DATABASE_URL -d --name decoy cqncpdp/decoy:latest
